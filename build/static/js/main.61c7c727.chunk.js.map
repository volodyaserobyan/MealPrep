{"version":3,"sources":["reducers/addToCardReducer.js","reducers/mealsItemReducer.js","reducers/handleFiltersReducer.js","reducers/rootReducer.js","reducers/blogItemReducer.js","reducers/filtersReducer.js","reducers/signupReducer.js","reducers/signinReducer.js","reducers/dropDownReducer.js","reducers/userReducer.js","store/Store.js","serviceWorker.js","index.js"],"names":["initialUserState","item","getMeals","filtersHandle","appReducer","combineReducers","blogItemReducer","state","action","type","blog","addToCardReducer","mealsItemReducer","concat","meals","count","totalCount","length","addMeals","deleteMeals","filtersReducer","getFilters","setFilters","addRange","handleFiltersReducer","i","name","newFiltersHandler","values","index","newState","indexOf","slice","splice","signupReducer","signupUser","verifyUser","signinReducer","signinUser","logOutUser","dropDownReducer","isDropDown","userReducer","userInfo","rootReducer","undefined","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","Boolean","location","hostname","match","App","lazy","ReactDOM","render","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61c7c727.chunk.js","sourcesContent":["const initialUserState = {\r\n    item: []\r\n}\r\nexport const addToCardReducer = (state = initialUserState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'ADD_TO_CARD': {\r\n            return {\r\n                ...state,\r\n                item: [...state.item, action.item]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","const initialUserState = {\r\n    getMeals: []\r\n}\r\nexport const mealsItemReducer = (state = initialUserState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_MEALS': {\r\n            return {\r\n                ...state,\r\n                getMeals: state.getMeals.concat(action.getMeals.meals),\r\n                count: action.getMeals.totalCount\r\n            }\r\n            // [...state.getMeals, action.getMeals.meals]\r\n            // state.getMeals.concat(action.getMeals.meals)\r\n        }\r\n        case 'GET_MEALS_FILTER': {\r\n            if (state.getMeals.length > action.getMeals.totalCount) {\r\n                state.getMeals.length = 0\r\n            }\r\n            return {\r\n                ...state,\r\n                getMeals: state.getMeals.concat(action.getMeals.meals),\r\n                count: action.getMeals.totalCount\r\n            }\r\n        }\r\n        case 'ADD_MEALS': {\r\n            return {\r\n                ...state,\r\n                addMeals: action.addMeals\r\n            }\r\n        }\r\n        case 'DELETE_MEALS': {\r\n            return {\r\n                ...state,\r\n                deleteMeals: action.deleteMeals\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","const initialUserState = {\r\n    filtersHandle: []\r\n}\r\nexport const handleFiltersReducer = (state = initialUserState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'HANDLING_FILTERS': {\r\n            for (let i = 0; i < state.filtersHandle.length; i++) {\r\n                if (state.filtersHandle[i].name == action.filtersHandle.name) {\r\n                    const newFiltersHandler = [...state.filtersHandle];\r\n                    newFiltersHandler[i] = {\r\n                        ...newFiltersHandler[i],\r\n                        values: newFiltersHandler[i].values.concat(action.filtersHandle.values[0])\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        filtersHandle: newFiltersHandler\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                filtersHandle: [...state.filtersHandle, action.filtersHandle]\r\n            }\r\n        }\r\n        case 'REMOVE_ITEM': {\r\n            let index\r\n            let newState = []\r\n            for (let i = 0; i < state.filtersHandle.length; i++) {\r\n                index = state.filtersHandle[i].values.indexOf(action.item)\r\n                newState = [...state.filtersHandle]\r\n                newState[i] = {\r\n                    ...newState[i],\r\n                    values: [...newState[i].values.slice(0, index),\r\n                    ...newState[i].values.slice(index + 1)]\r\n                }\r\n                if(newState[i].values.length == 0) {\r\n                    let deleteArr = state.filtersHandle.splice(i, 1)\r\n                    return {\r\n                        ...state\r\n                    }\r\n                    //  newState[i] = [...newState.slice(0, i), ...newState.slice(i + 1)]\r\n                    //  console.log(newState, 'newstate')\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                filtersHandle: [...newState]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { blogItemReducer } from './blogItemReducer'\r\nimport { addToCardReducer } from './addToCardReducer'\r\nimport { mealsItemReducer } from './mealsItemReducer'\r\nimport { filtersReducer } from './filtersReducer'\r\nimport { handleFiltersReducer } from './handleFiltersReducer'\r\nimport { signupReducer } from './signupReducer'\r\nimport { signinReducer } from './signinReducer'\r\nimport { dropDownReducer } from './dropDownReducer'\r\nimport { userReducer } from './userReducer'\r\n\r\nconst appReducer = combineReducers({\r\n    blogItemReducer,\r\n    addToCardReducer,\r\n    mealsItemReducer,\r\n    filtersReducer,\r\n    handleFiltersReducer,\r\n    signupReducer,\r\n    signinReducer,\r\n    dropDownReducer,\r\n    userReducer\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === 'LOGOUT_CALL') {\r\n        state.signinReducer = undefined;\r\n    }\r\n\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer","export const blogItemReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'BLOG_ITEMS':\r\n            return {\r\n                ...state,\r\n                blog: action.blog\r\n            }\r\n        default: return state;\r\n    }\r\n}","export const filtersReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'GET_FILTERS': {\r\n            return {\r\n                ...state,\r\n                getFilters: action.getFilters\r\n            }\r\n        }\r\n        case 'ADD_FILTERS': {\r\n            return {\r\n                ...state,\r\n                setFilters: action.setFilters\r\n            }\r\n        }\r\n        case 'ADD_RANGE': {\r\n            return {\r\n                ...state,\r\n                addRange: action.addRange\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","export const signupReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SIGNUP_USER': {\r\n            return {\r\n                ...state,\r\n                signupUser: action.signupUser\r\n            }\r\n        }\r\n        case 'VERIFY_USER': {\r\n            return {\r\n                ...state,\r\n                verifyUser: action.verifyUser\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","export const signinReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SIGNIN_USER': {\r\n            return {\r\n                ...state,\r\n                signinUser: action.signinUser\r\n            }\r\n        }\r\n        case 'LOGOUT_CALL': {\r\n            return {\r\n                ...state,\r\n                logOutUser: action.logOutUser\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","export const dropDownReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'OPEN_DROPDOWN': {\r\n            return {\r\n                ...state,\r\n                isDropDown: action.isDropDown\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","export const userReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SUCCESS_USER': {\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/rootReducer'\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { lazy, Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store/Store'\nimport * as serviceWorker from './serviceWorker';\n\nconst App = lazy(() => import('./App'))\n\nReactDOM.render(<Provider store={store}>\n    <Suspense fallback={<h1>Still Loading…</h1>}>\n        <App />\n    </Suspense>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}