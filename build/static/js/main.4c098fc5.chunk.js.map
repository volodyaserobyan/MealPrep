{"version":3,"sources":["const/ConstTypes.js","reducers/addToCardReducer.js","reducers/mealsItemReducer.js","reducers/handleFiltersReducer.js","reducers/testimonialsReducer.js","reducers/rootReducer.js","reducers/blogItemReducer.js","reducers/filtersReducer.js","reducers/signupReducer.js","reducers/signinReducer.js","reducers/dropDownReducer.js","reducers/userReducer.js","store/Store.js","serviceWorker.js","index.js"],"names":["BLOGITEMS","ADDTOCARD","HANDLINGFILTERS","REMOVEITEMARR","OPENDROPDOWN","GETMEALSFILTER","GETMEALS","RESETMEALS","GETFILTERS","SIGNUPUSER","SIGNINUSER","VERIFYUSER","VERIFYREFRESH","GETUSER","LOGOUTCALL","GETTESTIMONIALS","ERROR","initialUserState","item","getMeals","getMealsFilter","filtersHandle","initialState","getTestimonials","appReducer","combineReducers","blogItemReducer","state","action","type","blog","addToCardReducer","mealsItemReducer","console","log","concat","meals","count","totalCount","message","meassage","filtersReducer","getFilters","handleFiltersReducer","i","length","name","newFiltersHandler","values","index","newState","indexOf","slice","splice","signupReducer","signupUser","verifyUser","refresh","signinReducer","signinUser","logOutUser","dropDownReducer","isDropDown","userReducer","userInfo","testimonialsReducer","testimonial","testimonials","rootReducer","undefined","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","Boolean","location","hostname","match","App","lazy","ReactDOM","render","fallback","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c098fc5.chunk.js","sourcesContent":["export const BLOGITEMS = 'BLOG_ITEMS'\r\nexport const ADDTOCARD = 'ADD_TO_CARD'\r\nexport const HANDLINGFILTERS = 'HANDLING_FILTERS'\r\nexport const REMOVEITEMARR = 'REMOVE_ITEM_FROM_ARR'\r\nexport const OPENDROPDOWN = 'OPEN_DROPDOWN'\r\n\r\nexport const GETMEALSFILTER = 'GET_MEALS_FILTER'\r\nexport const GETMEALS = 'GET_MEALS'\r\nexport const RESETMEALS = 'RESET_MEALS'\r\n\r\nexport const GETFILTERS = 'GET_FILTERS'\r\n\r\nexport const SIGNUPUSER = 'SIGNUP_USER'\r\nexport const SIGNINUSER = 'SIGNIN_USER'\r\nexport const VERIFYUSER = 'VERIFY_USER'\r\nexport const VERIFYREFRESH = 'VERIFY_REFRESH'\r\nexport const GETUSER = 'GET_USER'\r\nexport const LOGOUTCALL = 'LOGOUT_CALL'\r\n\r\nexport const GETTESTIMONIALS = 'GET_TESTIMONIALS'\r\n\r\nexport const ERROR = 'ERROR'","import { ADDTOCARD } from '../const/ConstTypes'\r\n\r\nconst initialUserState = {\r\n    item: []\r\n}\r\nexport const addToCardReducer = (state = initialUserState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADDTOCARD: {\r\n            return {\r\n                ...state,\r\n                item: [...state.item, action.item]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { GETMEALS, GETMEALSFILTER } from '../const/ConstTypes'\r\n\r\nconst initialUserState = {\r\n    getMeals: [],\r\n    getMealsFilter: []\r\n}\r\nexport const mealsItemReducer = (state = initialUserState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GETMEALS: {\r\n            console.log(action.getMeals)\r\n            return {\r\n                ...state,\r\n                getMeals: state.getMeals.concat(action.getMeals.meals),\r\n                count: action.getMeals.totalCount,\r\n                message: action.getMeals.meassage\r\n            }\r\n        }\r\n        case GETMEALSFILTER: {\r\n            return {\r\n                ...state,\r\n                getMealsFilter: state.getMealsFilter.concat(action.getMeals.meals),\r\n                count: action.getMeals.totalCount\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { HANDLINGFILTERS } from '../const/ConstTypes'\r\nimport { REMOVEITEMARR } from '../const/ConstTypes'\r\n\r\nconst initialUserState = {\r\n    filtersHandle: []\r\n}\r\nexport const handleFiltersReducer = (state = initialUserState, action) => {\r\n\r\n    switch (action.type) {\r\n        case HANDLINGFILTERS: {\r\n            for (let i = 0; i < state.filtersHandle.length; i++) {\r\n                if (state.filtersHandle[i].name == action.filtersHandle.name) {\r\n                    const newFiltersHandler = [...state.filtersHandle];\r\n                    newFiltersHandler[i] = {\r\n                        ...newFiltersHandler[i],\r\n                        values: newFiltersHandler[i].values.concat(action.filtersHandle.values[0])\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        filtersHandle: newFiltersHandler\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                filtersHandle: [...state.filtersHandle, action.filtersHandle]\r\n            }\r\n        }\r\n        case REMOVEITEMARR: {\r\n            let index\r\n            let newState = []\r\n            for (let i = 0; i < state.filtersHandle.length; i++) {\r\n                index = state.filtersHandle[i].values.indexOf(action.item)\r\n                newState = [...state.filtersHandle]\r\n                newState[i] = {\r\n                    ...newState[i],\r\n                    values: [...newState[i].values.slice(0, index),\r\n                    ...newState[i].values.slice(index + 1)]\r\n                }\r\n                if (newState[i].values.length == 0) {\r\n                    let deleteArr = state.filtersHandle.splice(i, 1)\r\n                    return {\r\n                        ...state\r\n                    }\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                filtersHandle: [...newState]\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { GETTESTIMONIALS } from '../const/ConstTypes'\r\n\r\nconst initialState = {\r\n    getTestimonials: []\r\n}\r\nexport const testimonialsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case GETTESTIMONIALS: {\r\n            return {\r\n                ...state,\r\n                getTestimonials: state.getTestimonials.concat(action.testimonial.testimonials),\r\n                count: action.testimonial.totalCount,\r\n                message: action.testimonial.meassage\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { blogItemReducer } from './blogItemReducer'\r\nimport { addToCardReducer } from './addToCardReducer'\r\nimport { mealsItemReducer } from './mealsItemReducer'\r\nimport { filtersReducer } from './filtersReducer'\r\nimport { handleFiltersReducer } from './handleFiltersReducer'\r\nimport { signupReducer } from './signupReducer'\r\nimport { signinReducer } from './signinReducer'\r\nimport { dropDownReducer } from './dropDownReducer'\r\nimport { userReducer } from './userReducer'\r\nimport { testimonialsReducer } from './testimonialsReducer'\r\n\r\nconst appReducer = combineReducers({\r\n    blogItemReducer,\r\n    addToCardReducer,\r\n    mealsItemReducer,\r\n    filtersReducer,\r\n    handleFiltersReducer,\r\n    signupReducer,\r\n    signinReducer,\r\n    dropDownReducer,\r\n    userReducer,\r\n    testimonialsReducer\r\n})\r\n\r\nconst rootReducer = (state, action) => {\r\n    if (action.type === 'LOGOUT_CALL') {\r\n        state.signinReducer = undefined;\r\n    }\r\n\r\n    if (action.type === 'RESET_MEALS') {\r\n        state.mealsItemReducer = undefined\r\n    }\r\n\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer","import { BLOGITEMS } from '../const/ConstTypes'\r\n\r\nexport const blogItemReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case BLOGITEMS:\r\n            return {\r\n                ...state,\r\n                blog: action.blog\r\n            }\r\n        default: return state;\r\n    }\r\n}","import { GETFILTERS } from '../const/ConstTypes'\r\n\r\nexport const filtersReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case GETFILTERS: {\r\n            return {\r\n                ...state,\r\n                getFilters: action.getFilters\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { SIGNUPUSER, VERIFYUSER, VERIFYREFRESH } from '../const/ConstTypes'\r\n\r\nexport const signupReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case SIGNUPUSER: {\r\n            return {\r\n                ...state,\r\n                signupUser: action.signupUser\r\n            }\r\n        }\r\n        case VERIFYUSER: {\r\n            return {\r\n                ...state,\r\n                verifyUser: action.verifyUser\r\n            }\r\n        }\r\n        case VERIFYREFRESH: {\r\n            return {\r\n                ...state,\r\n                refresh: action.refresh\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { SIGNINUSER, LOGOUTCALL } from '../const/ConstTypes'\r\n\r\nexport const signinReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case SIGNINUSER: {\r\n            return {\r\n                ...state,\r\n                signinUser: action.signinUser\r\n            }\r\n        }\r\n        case LOGOUTCALL: {\r\n            return {\r\n                ...state,\r\n                logOutUser: action.logOutUser\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { OPENDROPDOWN } from '../const/ConstTypes'\r\n\r\nexport const dropDownReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case OPENDROPDOWN: {\r\n            return {\r\n                ...state,\r\n                isDropDown: action.isDropDown\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { GETUSER } from '../const/ConstTypes'\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case GETUSER: {\r\n            return {\r\n                ...state,\r\n                userInfo: action.userInfo\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from '../reducers/rootReducer'\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { lazy, Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store/Store'\nimport * as serviceWorker from './serviceWorker';\n\nconst App = lazy(() => import('./App'))\n\nReactDOM.render(<Provider store={store}>\n    <Suspense fallback={<h1>Still Loading…</h1>}>\n        <App />\n    </Suspense>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}